// <auto-generated />
using System;
using Expenses.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Expenses.Infrastructure.Migrations
{
    [DbContext(typeof(ExpenseContext))]
    partial class ExpenseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Expenses.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Default"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Everyday food and drink expenses",
                            Name = "Food"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Total petrol expenses for each car",
                            Name = "Petrol"
                        });
                });

            modelBuilder.Entity("Expenses.Domain.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Expense");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 60m,
                            CategoryId = 2,
                            Date = new DateTime(2019, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Weekly food shopping in the \"Shop & Go\""
                        },
                        new
                        {
                            Id = 2,
                            Amount = 40m,
                            CategoryId = 2,
                            Date = new DateTime(2019, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Weekly food shopping in the \"Shop & Go\""
                        },
                        new
                        {
                            Id = 3,
                            Amount = 35m,
                            CategoryId = 3,
                            Date = new DateTime(2019, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fillup a fool tank of Ford"
                        });
                });

            modelBuilder.Entity("Expenses.Domain.Models.Expense", b =>
                {
                    b.HasOne("Expenses.Domain.Models.Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
